var cov_1j9x6uieyp=function(){var path='/Users/dannyyassine/Documents/dev/node_shell/src/api/v1/controllers/project.js',hash='e0faeeee25964d5ae5fd5d511d0e4f4f5128cf24',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Users/dannyyassine/Documents/dev/node_shell/src/api/v1/controllers/project.js',statementMap:{'0':{start:{line:5,column:27},end:{line:5,column:72}},'1':{start:{line:6,column:22},end:{line:6,column:62}},'2':{start:{line:7,column:19},end:{line:7,column:57}},'3':{start:{line:8,column:19},end:{line:8,column:54}},'4':{start:{line:9,column:22},end:{line:9,column:60}},'5':{start:{line:10,column:23},end:{line:10,column:62}},'6':{start:{line:11,column:16},end:{line:11,column:57}},'7':{start:{line:12,column:22},end:{line:12,column:62}},'8':{start:{line:13,column:19},end:{line:13,column:57}},'9':{start:{line:14,column:25},end:{line:14,column:61}},'10':{start:{line:20,column:0},end:{line:24,column:2}},'11':{start:{line:21,column:4},end:{line:23,column:7}},'12':{start:{line:22,column:8},end:{line:22,column:57}},'13':{start:{line:31,column:0},end:{line:40,column:2}},'14':{start:{line:32,column:4},end:{line:39,column:7}},'15':{start:{line:36,column:12},end:{line:37,column:48}},'16':{start:{line:36,column:23},end:{line:36,column:65}},'17':{start:{line:37,column:17},end:{line:37,column:48}},'18':{start:{line:47,column:0},end:{line:57,column:2}},'19':{start:{line:48,column:20},end:{line:48,column:45}},'20':{start:{line:49,column:4},end:{line:56,column:6}},'21':{start:{line:53,column:12},end:{line:54,column:60}},'22':{start:{line:53,column:23},end:{line:53,column:65}},'23':{start:{line:54,column:17},end:{line:54,column:60}},'24':{start:{line:64,column:0},end:{line:80,column:2}},'25':{start:{line:65,column:18},end:{line:65,column:41}},'26':{start:{line:67,column:18},end:{line:67,column:20}},'27':{start:{line:68,column:4},end:{line:68,column:37}},'28':{start:{line:69,column:4},end:{line:69,column:41}},'29':{start:{line:71,column:4},end:{line:79,column:7}},'30':{start:{line:76,column:8},end:{line:76,column:46}},'31':{start:{line:78,column:8},end:{line:78,column:67}},'32':{start:{line:87,column:0},end:{line:93,column:2}},'33':{start:{line:88,column:18},end:{line:88,column:41}},'34':{start:{line:90,column:4},end:{line:92,column:7}},'35':{start:{line:91,column:8},end:{line:91,column:52}},'36':{start:{line:100,column:0},end:{line:112,column:2}},'37':{start:{line:101,column:18},end:{line:101,column:41}},'38':{start:{line:102,column:4},end:{line:111,column:11}},'39':{start:{line:107,column:8},end:{line:107,column:54}},'40':{start:{line:110,column:12},end:{line:110,column:54}},'41':{start:{line:119,column:0},end:{line:131,column:2}},'42':{start:{line:120,column:18},end:{line:120,column:41}},'43':{start:{line:121,column:4},end:{line:130,column:11}},'44':{start:{line:126,column:12},end:{line:126,column:70}},'45':{start:{line:129,column:12},end:{line:129,column:54}},'46':{start:{line:138,column:0},end:{line:149,column:2}},'47':{start:{line:139,column:18},end:{line:139,column:41}},'48':{start:{line:140,column:4},end:{line:148,column:11}},'49':{start:{line:144,column:8},end:{line:144,column:66}},'50':{start:{line:147,column:12},end:{line:147,column:54}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:20,column:22},end:{line:20,column:23}},loc:{start:{line:20,column:45},end:{line:24,column:1}},line:20},'1':{name:'(anonymous_1)',decl:{start:{line:21,column:39},end:{line:21,column:40}},loc:{start:{line:21,column:49},end:{line:23,column:5}},line:21},'2':{name:'(anonymous_2)',decl:{start:{line:31,column:24},end:{line:31,column:25}},loc:{start:{line:31,column:47},end:{line:40,column:1}},line:31},'3':{name:'(anonymous_3)',decl:{start:{line:35,column:18},end:{line:35,column:19}},loc:{start:{line:35,column:38},end:{line:38,column:9}},line:35},'4':{name:'(anonymous_4)',decl:{start:{line:47,column:21},end:{line:47,column:22}},loc:{start:{line:47,column:44},end:{line:57,column:1}},line:47},'5':{name:'(anonymous_5)',decl:{start:{line:52,column:18},end:{line:52,column:19}},loc:{start:{line:52,column:38},end:{line:55,column:9}},line:52},'6':{name:'(anonymous_6)',decl:{start:{line:64,column:24},end:{line:64,column:25}},loc:{start:{line:64,column:47},end:{line:80,column:1}},line:64},'7':{name:'(anonymous_7)',decl:{start:{line:75,column:12},end:{line:75,column:13}},loc:{start:{line:75,column:32},end:{line:77,column:5}},line:75},'8':{name:'(anonymous_8)',decl:{start:{line:77,column:13},end:{line:77,column:14}},loc:{start:{line:77,column:19},end:{line:79,column:5}},line:77},'9':{name:'(anonymous_9)',decl:{start:{line:87,column:24},end:{line:87,column:25}},loc:{start:{line:87,column:47},end:{line:93,column:1}},line:87},'10':{name:'(anonymous_10)',decl:{start:{line:90,column:54},end:{line:90,column:55}},loc:{start:{line:90,column:60},end:{line:92,column:5}},line:90},'11':{name:'(anonymous_11)',decl:{start:{line:100,column:27},end:{line:100,column:28}},loc:{start:{line:100,column:50},end:{line:112,column:1}},line:100},'12':{name:'(anonymous_12)',decl:{start:{line:106,column:12},end:{line:106,column:13}},loc:{start:{line:106,column:18},end:{line:108,column:5}},line:106},'13':{name:'(anonymous_13)',decl:{start:{line:109,column:15},end:{line:109,column:16}},loc:{start:{line:109,column:26},end:{line:111,column:9}},line:109},'14':{name:'(anonymous_14)',decl:{start:{line:119,column:27},end:{line:119,column:28}},loc:{start:{line:119,column:50},end:{line:131,column:1}},line:119},'15':{name:'(anonymous_15)',decl:{start:{line:125,column:14},end:{line:125,column:15}},loc:{start:{line:125,column:23},end:{line:127,column:5}},line:125},'16':{name:'(anonymous_16)',decl:{start:{line:128,column:15},end:{line:128,column:16}},loc:{start:{line:128,column:26},end:{line:130,column:9}},line:128},'17':{name:'(anonymous_17)',decl:{start:{line:138,column:35},end:{line:138,column:36}},loc:{start:{line:138,column:58},end:{line:149,column:1}},line:138},'18':{name:'(anonymous_18)',decl:{start:{line:143,column:12},end:{line:143,column:13}},loc:{start:{line:143,column:21},end:{line:145,column:5}},line:143},'19':{name:'(anonymous_19)',decl:{start:{line:146,column:15},end:{line:146,column:16}},loc:{start:{line:146,column:26},end:{line:148,column:9}},line:146}},branchMap:{'0':{loc:{start:{line:36,column:12},end:{line:37,column:48}},type:'if',locations:[{start:{line:36,column:12},end:{line:37,column:48}},{start:{line:36,column:12},end:{line:37,column:48}}],line:36},'1':{loc:{start:{line:53,column:12},end:{line:54,column:60}},type:'if',locations:[{start:{line:53,column:12},end:{line:54,column:60}},{start:{line:53,column:12},end:{line:54,column:60}}],line:53}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0,'34':0,'35':0,'36':0,'37':0,'38':0,'39':0,'40':0,'41':0,'42':0,'43':0,'44':0,'45':0,'46':0,'47':0,'48':0,'49':0,'50':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0},b:{'0':[0,0],'1':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();/**
 * Created by dannyyassine on 2017-06-10.
 */const ProjectDataManager=(++cov_1j9x6uieyp.s[0],require('./../dataSource/ProjectDataManager'));const scriptManager=(++cov_1j9x6uieyp.s[1],require('./../dataSource/performScript'));const addProject=(++cov_1j9x6uieyp.s[2],require('./../useCases/AddNewProject'));const getProject=(++cov_1j9x6uieyp.s[3],require('./../useCases/GetProject'));const updateProject=(++cov_1j9x6uieyp.s[4],require('./../useCases/UpdateProject'));const runShellScript=(++cov_1j9x6uieyp.s[5],require('./../useCases/RunShellScript'));const Project=(++cov_1j9x6uieyp.s[6],require('./../../../core/models/project'));const consoleLogger=(++cov_1j9x6uieyp.s[7],require('./../dataSource/consoleLogger'));const projectLog=(++cov_1j9x6uieyp.s[8],require('./../useCases/GetProjectLog'));const workspaceManager=(++cov_1j9x6uieyp.s[9],require('./../dataSource/workspace'));/**
 * Response to - '/projects'
 * @param request
 * @param response
 */++cov_1j9x6uieyp.s[10];exports.allProjects=(request,response)=>{++cov_1j9x6uieyp.f[0];++cov_1j9x6uieyp.s[11];ProjectDataManager.loadAllProjects(data=>{++cov_1j9x6uieyp.f[1];++cov_1j9x6uieyp.s[12];response.status(200).json({data:data.projects});});};/**
 * Response to - '/projects/add'
 * @param request
 * @param response
 */++cov_1j9x6uieyp.s[13];exports.addNewProject=(request,response)=>{++cov_1j9x6uieyp.f[2];++cov_1j9x6uieyp.s[14];addProject({name:request.body.project_name,dataSource:ProjectDataManager,callback:(project,error)=>{++cov_1j9x6uieyp.f[3];++cov_1j9x6uieyp.s[15];if(error){++cov_1j9x6uieyp.b[0][0];++cov_1j9x6uieyp.s[16];response.status(400).json({error:error});}else{++cov_1j9x6uieyp.b[0][1];++cov_1j9x6uieyp.s[17];response.json({data:"added"});}}});};/**
 * Response to - '/project/:project_id'
 * @param request
 * @param response
 */++cov_1j9x6uieyp.s[18];exports.getProject=(request,response)=>{++cov_1j9x6uieyp.f[4];let projectId=(++cov_1j9x6uieyp.s[19],request.params.project_id);++cov_1j9x6uieyp.s[20];getProject({projectId:projectId,dataSource:ProjectDataManager,callback:(project,error)=>{++cov_1j9x6uieyp.f[5];++cov_1j9x6uieyp.s[21];if(error){++cov_1j9x6uieyp.b[1][0];++cov_1j9x6uieyp.s[22];response.status(400).json({error:error});}else{++cov_1j9x6uieyp.b[1][1];++cov_1j9x6uieyp.s[23];response.status(200).json({data:project});}}});};/**
 * Response to - '/project/:project_id/edit'
 * @param request
 * @param response
 */++cov_1j9x6uieyp.s[24];exports.updateProject=(request,response)=>{++cov_1j9x6uieyp.f[6];let project=(++cov_1j9x6uieyp.s[25],response.locals.project);let options=(++cov_1j9x6uieyp.s[26],{});++cov_1j9x6uieyp.s[27];options.name=request.body.name;++cov_1j9x6uieyp.s[28];options.script=request.body.script;++cov_1j9x6uieyp.s[29];updateProject({project:project,options:options,dataSource:ProjectDataManager}).then(updatedProject=>{++cov_1j9x6uieyp.f[7];++cov_1j9x6uieyp.s[30];response.json({data:updatedProject});}).catch(()=>{++cov_1j9x6uieyp.f[8];++cov_1j9x6uieyp.s[31];response.json({'error':Error('could not update project')});});};/**
 * Responds to - '/project/:project_id'
 * @param request
 * @param response
 */++cov_1j9x6uieyp.s[32];exports.deleteProject=(request,response)=>{++cov_1j9x6uieyp.f[9];let project=(++cov_1j9x6uieyp.s[33],response.locals.project);++cov_1j9x6uieyp.s[34];ProjectDataManager.deleteProject(project.id).then(()=>{++cov_1j9x6uieyp.f[10];++cov_1j9x6uieyp.s[35];response.status(200).json({data:"delete"});});};/**
 * Responds to - '/project/:project_id/build'
 * @param request
 * @param response
 */++cov_1j9x6uieyp.s[36];exports.performShellTask=(request,response)=>{++cov_1j9x6uieyp.f[11];let project=(++cov_1j9x6uieyp.s[37],response.locals.project);++cov_1j9x6uieyp.s[38];runShellScript({project:project,dataSource:scriptManager,workspace:workspaceManager}).then(()=>{++cov_1j9x6uieyp.f[12];++cov_1j9x6uieyp.s[39];response.status(200).json({data:"building"});}).catch(error=>{++cov_1j9x6uieyp.f[13];++cov_1j9x6uieyp.s[40];response.status(400).json({error:error});});};/**
 * Responds to - '/project/:project_id/log'
 * @param request
 * @param response
 */++cov_1j9x6uieyp.s[41];exports.getAllConsoleLog=(request,response)=>{++cov_1j9x6uieyp.f[14];let project=(++cov_1j9x6uieyp.s[42],response.locals.project);++cov_1j9x6uieyp.s[43];projectLog.getLog({project:project,logger:consoleLogger}).then(log=>{++cov_1j9x6uieyp.f[15];++cov_1j9x6uieyp.s[44];response.send(log,{'Content-Type':'text/plain'},200);}).catch(error=>{++cov_1j9x6uieyp.f[16];++cov_1j9x6uieyp.s[45];response.status(400).json({error:error});});};/**
 * Responds to - '/project/:project_id/progressive-log'
 * @param request
 * @param response
 */++cov_1j9x6uieyp.s[46];exports.getProgressiveConsoleLog=(request,response)=>{++cov_1j9x6uieyp.f[17];let project=(++cov_1j9x6uieyp.s[47],response.locals.project);++cov_1j9x6uieyp.s[48];projectLog.getProgressiveLog({project:project,logger:consoleLogger}).then(log=>{++cov_1j9x6uieyp.f[18];++cov_1j9x6uieyp.s[49];response.send(log,{'Content-Type':'text/plain'},200);}).catch(error=>{++cov_1j9x6uieyp.f[19];++cov_1j9x6uieyp.s[50];response.status(400).json({error:error});});};