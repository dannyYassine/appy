var cov_yemuamcd3=function(){var path="/Users/dannyyassine/Documents/dev/node_shell/src/core/validators/validator.js",hash="3d1b56eee2f86ad77b256cacd45cc35f763b7e23",global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/dannyyassine/Documents/dev/node_shell/src/core/validators/validator.js",statementMap:{"0":{start:{line:11,column:20},end:{line:24,column:1}},"1":{start:{line:13,column:20},end:{line:13,column:24}},"2":{start:{line:15,column:4},end:{line:22,column:5}},"3":{start:{line:16,column:26},end:{line:16,column:50}},"4":{start:{line:17,column:8},end:{line:17,column:47}},"5":{start:{line:18,column:8},end:{line:21,column:9}},"6":{start:{line:20,column:12},end:{line:20,column:29}},"7":{start:{line:23,column:4},end:{line:23,column:21}},"8":{start:{line:26,column:0},end:{line:26,column:29}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:11,column:20},end:{line:11,column:21}},loc:{start:{line:11,column:56},end:{line:24,column:1}},line:11}},branchMap:{"0":{loc:{start:{line:18,column:8},end:{line:21,column:9}},type:"if",locations:[{start:{line:18,column:8},end:{line:21,column:9}},{start:{line:18,column:8},end:{line:21,column:9}}],line:18}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();++cov_yemuamcd3.s[0];/**
 * Created by dannyyassine on 2017-06-21.
 *//**
 * Verifies all injected validators to validated the object passed as the first arguments
 * @param object
 * @param arrayOfValidators
 * @returns {boolean}
 */const validateAll=function(object,arrayOfValidators){++cov_yemuamcd3.f[0];let validated=(++cov_yemuamcd3.s[1],true);let error;++cov_yemuamcd3.s[2];for(const index in arrayOfValidators){const validator=(++cov_yemuamcd3.s[3],arrayOfValidators[index]);++cov_yemuamcd3.s[4];validated=validator.validate(object);++cov_yemuamcd3.s[5];if(validated===false){++cov_yemuamcd3.b[0][0];++cov_yemuamcd3.s[6];// return validator.getError();
return validated;}else{++cov_yemuamcd3.b[0][1];}}++cov_yemuamcd3.s[7];return validated;};++cov_yemuamcd3.s[8];module.exports=validateAll;