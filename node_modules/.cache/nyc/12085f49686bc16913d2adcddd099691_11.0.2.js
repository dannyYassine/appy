var cov_16jm3g86a8=function(){var path='/Users/dannyyassine/Documents/dev/node_shell/src/api/v1/useCases/GetProjectLog.js',hash='44b0c0319bc613fc882c5181430311e54ef597c0',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Users/dannyyassine/Documents/dev/node_shell/src/api/v1/useCases/GetProjectLog.js',statementMap:{'0':{start:{line:5,column:27},end:{line:5,column:72}},'1':{start:{line:13,column:15},end:{line:24,column:1}},'2':{start:{line:14,column:4},end:{line:23,column:7}},'3':{start:{line:16,column:8},end:{line:22,column:25}},'4':{start:{line:18,column:16},end:{line:18,column:33}},'5':{start:{line:19,column:16},end:{line:19,column:58}},'6':{start:{line:21,column:12},end:{line:21,column:32}},'7':{start:{line:32,column:26},end:{line:53,column:1}},'8':{start:{line:33,column:18},end:{line:42,column:6}},'9':{start:{line:35,column:8},end:{line:41,column:25}},'10':{start:{line:37,column:16},end:{line:37,column:33}},'11':{start:{line:38,column:16},end:{line:38,column:58}},'12':{start:{line:40,column:12},end:{line:40,column:32}},'13':{start:{line:44,column:4},end:{line:52,column:7}},'14':{start:{line:45,column:8},end:{line:51,column:15}},'15':{start:{line:47,column:16},end:{line:47,column:33}},'16':{start:{line:50,column:16},end:{line:50,column:28}},'17':{start:{line:55,column:0},end:{line:58,column:2}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:13,column:15},end:{line:13,column:16}},loc:{start:{line:13,column:44},end:{line:24,column:1}},line:13},'1':{name:'(anonymous_1)',decl:{start:{line:14,column:23},end:{line:14,column:24}},loc:{start:{line:14,column:44},end:{line:23,column:5}},line:14},'2':{name:'(anonymous_2)',decl:{start:{line:17,column:18},end:{line:17,column:19}},loc:{start:{line:17,column:27},end:{line:20,column:13}},line:17},'3':{name:'(anonymous_3)',decl:{start:{line:20,column:20},end:{line:20,column:21}},loc:{start:{line:20,column:26},end:{line:22,column:9}},line:20},'4':{name:'(anonymous_4)',decl:{start:{line:32,column:26},end:{line:32,column:27}},loc:{start:{line:32,column:55},end:{line:53,column:1}},line:32},'5':{name:'(anonymous_5)',decl:{start:{line:33,column:30},end:{line:33,column:31}},loc:{start:{line:33,column:51},end:{line:42,column:5}},line:33},'6':{name:'(anonymous_6)',decl:{start:{line:36,column:18},end:{line:36,column:19}},loc:{start:{line:36,column:27},end:{line:39,column:13}},line:36},'7':{name:'(anonymous_7)',decl:{start:{line:39,column:20},end:{line:39,column:21}},loc:{start:{line:39,column:26},end:{line:41,column:9}},line:39},'8':{name:'(anonymous_8)',decl:{start:{line:44,column:23},end:{line:44,column:24}},loc:{start:{line:44,column:44},end:{line:52,column:5}},line:44},'9':{name:'(anonymous_9)',decl:{start:{line:46,column:18},end:{line:46,column:19}},loc:{start:{line:46,column:31},end:{line:48,column:13}},line:46},'10':{name:'(anonymous_10)',decl:{start:{line:49,column:19},end:{line:49,column:20}},loc:{start:{line:49,column:28},end:{line:51,column:13}},line:49}},branchMap:{},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0},b:{},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();/**
 * Created by dannyyassine on 2017-06-24.
 */const projectDataManager=(++cov_16jm3g86a8.s[0],require('./../dataSource/ProjectDataManager'));/**
 *
 * @param project
 * @param logger
 * @returns {Promise}
 */++cov_16jm3g86a8.s[1];const getLog=function({project,logger}){++cov_16jm3g86a8.f[0];++cov_16jm3g86a8.s[2];return new Promise((resolve,reject)=>{++cov_16jm3g86a8.f[1];let projectLog;++cov_16jm3g86a8.s[3];logger.getFullLog(project).then(log=>{++cov_16jm3g86a8.f[2];++cov_16jm3g86a8.s[4];projectLog=log;++cov_16jm3g86a8.s[5];return logger.resetProgressiveLog(project);}).then(()=>{++cov_16jm3g86a8.f[3];++cov_16jm3g86a8.s[6];resolve(projectLog);}).catch(reject);});};/**
 *
 * @param project
 * @param logger
 * @returns {Promise}
 */++cov_16jm3g86a8.s[7];const getProgressiveLog=function({project,logger}){++cov_16jm3g86a8.f[4];let promise=(++cov_16jm3g86a8.s[8],new Promise((resolve,reject)=>{++cov_16jm3g86a8.f[5];let projectLog;++cov_16jm3g86a8.s[9];logger.getProgressiveLog(project).then(log=>{++cov_16jm3g86a8.f[6];++cov_16jm3g86a8.s[10];projectLog=log;++cov_16jm3g86a8.s[11];return logger.resetProgressiveLog(project);}).then(()=>{++cov_16jm3g86a8.f[7];++cov_16jm3g86a8.s[12];resolve(projectLog);}).catch(reject);}));++cov_16jm3g86a8.s[13];return new Promise((resolve,reject)=>{++cov_16jm3g86a8.f[8];++cov_16jm3g86a8.s[14];Promise.all([projectDataManager.loadProject(project.id),promise]).then(results=>{++cov_16jm3g86a8.f[9];++cov_16jm3g86a8.s[15];resolve(results);}).catch(err=>{++cov_16jm3g86a8.f[10];++cov_16jm3g86a8.s[16];reject(err);});});};++cov_16jm3g86a8.s[17];module.exports={getLog,getProgressiveLog};