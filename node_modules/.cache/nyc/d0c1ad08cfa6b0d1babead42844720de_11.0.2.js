var cov_1j3dcp7y5w=function(){var path="/Users/dannyyassine/Documents/dev/node_shell/src/api/v1/controllers/settings.js",hash="83e1b7cc5ba5ac62ed85198a847908691fe1d4e9",global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/dannyyassine/Documents/dev/node_shell/src/api/v1/controllers/settings.js",statementMap:{"0":{start:{line:5,column:20},end:{line:5,column:56}},"1":{start:{line:11,column:17},end:{line:34,column:1}},"2":{start:{line:18,column:32},end:{line:28,column:5}},"3":{start:{line:19,column:8},end:{line:27,column:15}},"4":{start:{line:23,column:16},end:{line:23,column:43}},"5":{start:{line:26,column:16},end:{line:26,column:60}},"6":{start:{line:30,column:4},end:{line:32,column:5}},"7":{start:{line:36,column:0},end:{line:36,column:26}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:11,column:17},end:{line:11,column:18}},loc:{start:{line:11,column:39},end:{line:34,column:1}},line:11},"1":{name:"(anonymous_1)",decl:{start:{line:18,column:32},end:{line:18,column:33}},loc:{start:{line:18,column:55},end:{line:28,column:5}},line:18},"2":{name:"(anonymous_2)",decl:{start:{line:22,column:18},end:{line:22,column:19}},loc:{start:{line:22,column:24},end:{line:24,column:13}},line:22},"3":{name:"(anonymous_3)",decl:{start:{line:25,column:19},end:{line:25,column:20}},loc:{start:{line:25,column:25},end:{line:27,column:13}},line:25}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},f:{"0":0,"1":0,"2":0,"3":0},b:{},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();/**
 * Created by dannyyassine on 2017-06-25.
 */const getSettings=(++cov_1j3dcp7y5w.s[0],require('./../useCases/GetSettings'));/**
 * Settings Controller factory function
 * @param dataSource
 */++cov_1j3dcp7y5w.s[1];const settings=function(dataSource){++cov_1j3dcp7y5w.f[0];++cov_1j3dcp7y5w.s[2];/**
     *
     * @param request
     * @param response
     */const environmentSettings=(request,response)=>{++cov_1j3dcp7y5w.f[1];++cov_1j3dcp7y5w.s[3];getSettings({dataSource:dataSource}).then(()=>{++cov_1j3dcp7y5w.f[2];++cov_1j3dcp7y5w.s[4];response.json({data:"1"});}).catch(()=>{++cov_1j3dcp7y5w.f[3];++cov_1j3dcp7y5w.s[5];response.status(400).json({error:Error()});});};++cov_1j3dcp7y5w.s[6];return{environmentSettings};};++cov_1j3dcp7y5w.s[7];module.exports=settings;