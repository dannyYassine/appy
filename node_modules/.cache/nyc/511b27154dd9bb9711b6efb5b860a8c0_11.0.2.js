var cov_23238uscu4=function(){var path='/Users/dannyyassine/Documents/dev/node_shell/src/api/v1/dataSource/consoleLogger.js',hash='229770e196e30ee210f6b5f58516388720cf245e',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Users/dannyyassine/Documents/dev/node_shell/src/api/v1/dataSource/consoleLogger.js',statementMap:{'0':{start:{line:5,column:11},end:{line:5,column:24}},'1':{start:{line:6,column:26},end:{line:6,column:68}},'2':{start:{line:13,column:16},end:{line:16,column:1}},'3':{start:{line:14,column:22},end:{line:14,column:60}},'4':{start:{line:15,column:4},end:{line:15,column:40}},'5':{start:{line:23,column:27},end:{line:26,column:1}},'6':{start:{line:24,column:22},end:{line:24,column:60}},'7':{start:{line:25,column:4},end:{line:25,column:48}},'8':{start:{line:33,column:19},end:{line:40,column:1}},'9':{start:{line:34,column:4},end:{line:39,column:7}},'10':{start:{line:35,column:8},end:{line:38,column:11}},'11':{start:{line:36,column:12},end:{line:37,column:47}},'12':{start:{line:36,column:22},end:{line:36,column:54}},'13':{start:{line:37,column:17},end:{line:37,column:47}},'14':{start:{line:47,column:26},end:{line:54,column:1}},'15':{start:{line:48,column:4},end:{line:53,column:7}},'16':{start:{line:49,column:8},end:{line:52,column:11}},'17':{start:{line:50,column:12},end:{line:51,column:47}},'18':{start:{line:50,column:22},end:{line:50,column:54}},'19':{start:{line:51,column:17},end:{line:51,column:47}},'20':{start:{line:61,column:28},end:{line:68,column:1}},'21':{start:{line:62,column:4},end:{line:67,column:7}},'22':{start:{line:63,column:8},end:{line:66,column:11}},'23':{start:{line:64,column:12},end:{line:65,column:34}},'24':{start:{line:64,column:23},end:{line:64,column:44}},'25':{start:{line:65,column:17},end:{line:65,column:34}},'26':{start:{line:70,column:0},end:{line:76,column:2}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:13,column:16},end:{line:13,column:17}},loc:{start:{line:13,column:35},end:{line:16,column:1}},line:13},'1':{name:'(anonymous_1)',decl:{start:{line:23,column:27},end:{line:23,column:28}},loc:{start:{line:23,column:46},end:{line:26,column:1}},line:23},'2':{name:'(anonymous_2)',decl:{start:{line:33,column:19},end:{line:33,column:20}},loc:{start:{line:33,column:38},end:{line:40,column:1}},line:33},'3':{name:'(anonymous_3)',decl:{start:{line:34,column:23},end:{line:34,column:24}},loc:{start:{line:34,column:44},end:{line:39,column:5}},line:34},'4':{name:'(anonymous_4)',decl:{start:{line:35,column:38},end:{line:35,column:39}},loc:{start:{line:35,column:55},end:{line:38,column:9}},line:35},'5':{name:'(anonymous_5)',decl:{start:{line:47,column:26},end:{line:47,column:27}},loc:{start:{line:47,column:45},end:{line:54,column:1}},line:47},'6':{name:'(anonymous_6)',decl:{start:{line:48,column:23},end:{line:48,column:24}},loc:{start:{line:48,column:44},end:{line:53,column:5}},line:48},'7':{name:'(anonymous_7)',decl:{start:{line:49,column:49},end:{line:49,column:50}},loc:{start:{line:49,column:66},end:{line:52,column:9}},line:49},'8':{name:'(anonymous_8)',decl:{start:{line:61,column:28},end:{line:61,column:29}},loc:{start:{line:61,column:47},end:{line:68,column:1}},line:61},'9':{name:'(anonymous_9)',decl:{start:{line:62,column:23},end:{line:62,column:24}},loc:{start:{line:62,column:44},end:{line:67,column:5}},line:62},'10':{name:'(anonymous_10)',decl:{start:{line:63,column:54},end:{line:63,column:55}},loc:{start:{line:63,column:65},end:{line:66,column:9}},line:63}},branchMap:{'0':{loc:{start:{line:36,column:12},end:{line:37,column:47}},type:'if',locations:[{start:{line:36,column:12},end:{line:37,column:47}},{start:{line:36,column:12},end:{line:37,column:47}}],line:36},'1':{loc:{start:{line:50,column:12},end:{line:51,column:47}},type:'if',locations:[{start:{line:50,column:12},end:{line:51,column:47}},{start:{line:50,column:12},end:{line:51,column:47}}],line:50},'2':{loc:{start:{line:64,column:12},end:{line:65,column:34}},type:'if',locations:[{start:{line:64,column:12},end:{line:65,column:34}},{start:{line:64,column:12},end:{line:65,column:34}}],line:64}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0},b:{'0':[0,0],'1':[0,0],'2':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();/**
 * Created by dannyyassine on 2017-06-24.
 */const fs=(++cov_23238uscu4.s[0],require('fs'));const projectFileSystem=(++cov_23238uscu4.s[1],require('./../services/projectFileSystem'));/**
 * file path of full log
 * @param project
 * @returns {string}
 */++cov_23238uscu4.s[2];const logPath=function(project){++cov_23238uscu4.f[0];let projectPath=(++cov_23238uscu4.s[3],projectFileSystem.projectPath(project));++cov_23238uscu4.s[4];return`${projectPath}/run-log.txt`;};/**
 * file path of progressive log
 * @param project
 * @returns {string}
 */++cov_23238uscu4.s[5];const progressiveLogPath=function(project){++cov_23238uscu4.f[1];let projectPath=(++cov_23238uscu4.s[6],projectFileSystem.projectPath(project));++cov_23238uscu4.s[7];return`${projectPath}/progressive-log.txt`;};/**
 * Method to return text log of entire script
 * @param project
 * @returns {Promise}
 */++cov_23238uscu4.s[8];const getFullLog=function(project){++cov_23238uscu4.f[2];++cov_23238uscu4.s[9];return new Promise((resolve,reject)=>{++cov_23238uscu4.f[3];++cov_23238uscu4.s[10];fs.readFile(logPath(project),(error,data)=>{++cov_23238uscu4.f[4];++cov_23238uscu4.s[11];if(data){++cov_23238uscu4.b[0][0];++cov_23238uscu4.s[12];return resolve(data.toString());}else{++cov_23238uscu4.b[0][1];++cov_23238uscu4.s[13];return reject(Error('no log'));}});});};/**
 * Method to return pregressove text log
 * @param project
 * @returns {Promise}
 */++cov_23238uscu4.s[14];const getProgressiveLog=function(project){++cov_23238uscu4.f[5];++cov_23238uscu4.s[15];return new Promise((resolve,reject)=>{++cov_23238uscu4.f[6];++cov_23238uscu4.s[16];fs.readFile(progressiveLogPath(project),(error,data)=>{++cov_23238uscu4.f[7];++cov_23238uscu4.s[17];if(data){++cov_23238uscu4.b[1][0];++cov_23238uscu4.s[18];return resolve(data.toString());}else{++cov_23238uscu4.b[1][1];++cov_23238uscu4.s[19];return reject(Error('no log'));}});});};/**
 * Resets content of progressive log
 * @param project
 * @returns {Promise}
 */++cov_23238uscu4.s[20];const resetProgressiveLog=function(project){++cov_23238uscu4.f[8];++cov_23238uscu4.s[21];return new Promise((resolve,reject)=>{++cov_23238uscu4.f[9];++cov_23238uscu4.s[22];fs.writeFile(progressiveLogPath(project),'',error=>{++cov_23238uscu4.f[10];++cov_23238uscu4.s[23];if(error){++cov_23238uscu4.b[2][0];++cov_23238uscu4.s[24];return reject(error);}else{++cov_23238uscu4.b[2][1];++cov_23238uscu4.s[25];return resolve();}});});};++cov_23238uscu4.s[26];module.exports={logPath,progressiveLogPath,getFullLog,getProgressiveLog,resetProgressiveLog};