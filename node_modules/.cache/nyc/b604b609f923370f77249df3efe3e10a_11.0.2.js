var cov_1gt26x4o7x=function(){var path='/Users/dannyyassine/Documents/dev/node_shell/src/api/v1/middlewares/getProject.js',hash='e565ace2772053b52cca13cb1daab5f3485aaed9',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Users/dannyyassine/Documents/dev/node_shell/src/api/v1/middlewares/getProject.js',statementMap:{'0':{start:{line:5,column:19},end:{line:5,column:54}},'1':{start:{line:6,column:27},end:{line:6,column:72}},'2':{start:{line:7,column:16},end:{line:7,column:57}},'3':{start:{line:15,column:0},end:{line:33,column:2}},'4':{start:{line:16,column:20},end:{line:16,column:45}},'5':{start:{line:18,column:21},end:{line:25,column:5}},'6':{start:{line:19,column:8},end:{line:24,column:9}},'7':{start:{line:20,column:12},end:{line:20,column:74}},'8':{start:{line:21,column:12},end:{line:21,column:19}},'9':{start:{line:23,column:12},end:{line:23,column:68}},'10':{start:{line:27,column:4},end:{line:31,column:7}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:15,column:38},end:{line:15,column:39}},loc:{start:{line:15,column:67},end:{line:33,column:1}},line:15},'1':{name:'(anonymous_1)',decl:{start:{line:18,column:21},end:{line:18,column:22}},loc:{start:{line:18,column:34},end:{line:25,column:5}},line:18}},branchMap:{'0':{loc:{start:{line:19,column:8},end:{line:24,column:9}},type:'if',locations:[{start:{line:19,column:8},end:{line:24,column:9}},{start:{line:19,column:8},end:{line:24,column:9}}],line:19}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0},f:{'0':0,'1':0},b:{'0':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();/**
 * Created by dannyyassine on 2017-06-24.
 */const getProject=(++cov_1gt26x4o7x.s[0],require('./../useCases/GetProject'));const ProjectDataManager=(++cov_1gt26x4o7x.s[1],require('./../dataSource/ProjectDataManager'));const Project=(++cov_1gt26x4o7x.s[2],require('./../../../core/models/project'));/**
 * Middleware to retrieve a Project with its projectId
 * @param request
 * @param response
 * @param next
 */++cov_1gt26x4o7x.s[3];exports.middlewareControllerProject=(request,response,next)=>{++cov_1gt26x4o7x.f[0];let projectId=(++cov_1gt26x4o7x.s[4],request.params.project_id);++cov_1gt26x4o7x.s[5];const callback=project=>{++cov_1gt26x4o7x.f[1];++cov_1gt26x4o7x.s[6];if(project){++cov_1gt26x4o7x.b[0][0];++cov_1gt26x4o7x.s[7];response.locals.project=Object.assign(new Project(),project);++cov_1gt26x4o7x.s[8];next();}else{++cov_1gt26x4o7x.b[0][1];++cov_1gt26x4o7x.s[9];response.status(400).json({error:Error('no project')});}};++cov_1gt26x4o7x.s[10];getProject({projectId:projectId,dataSource:ProjectDataManager,callback:callback});};