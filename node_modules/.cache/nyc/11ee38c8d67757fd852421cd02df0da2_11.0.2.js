var cov_1j9x6uieyp=function(){var path='/Users/dannyyassine/Documents/dev/node_shell/src/api/v1/controllers/project.js',hash='0a5008a30106370510647cbf16389fa536598a17',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Users/dannyyassine/Documents/dev/node_shell/src/api/v1/controllers/project.js',statementMap:{'0':{start:{line:5,column:27},end:{line:5,column:72}},'1':{start:{line:6,column:22},end:{line:6,column:58}},'2':{start:{line:7,column:23},end:{line:7,column:62}},'3':{start:{line:8,column:22},end:{line:8,column:58}},'4':{start:{line:9,column:19},end:{line:9,column:57}},'5':{start:{line:10,column:25},end:{line:10,column:57}},'6':{start:{line:12,column:16},end:{line:12,column:57}},'7':{start:{line:14,column:29},end:{line:14,column:67}},'8':{start:{line:15,column:29},end:{line:15,column:64}},'9':{start:{line:16,column:32},end:{line:16,column:70}},'10':{start:{line:18,column:26},end:{line:178,column:1}},'11':{start:{line:25,column:24},end:{line:29,column:5}},'12':{start:{line:26,column:8},end:{line:28,column:11}},'13':{start:{line:27,column:12},end:{line:27,column:61}},'14':{start:{line:36,column:26},end:{line:49,column:5}},'15':{start:{line:37,column:8},end:{line:48,column:11}},'16':{start:{line:44,column:20},end:{line:45,column:56}},'17':{start:{line:44,column:31},end:{line:44,column:73}},'18':{start:{line:45,column:25},end:{line:45,column:56}},'19':{start:{line:56,column:23},end:{line:66,column:5}},'20':{start:{line:57,column:24},end:{line:57,column:49}},'21':{start:{line:58,column:8},end:{line:65,column:10}},'22':{start:{line:62,column:16},end:{line:63,column:64}},'23':{start:{line:62,column:27},end:{line:62,column:69}},'24':{start:{line:63,column:21},end:{line:63,column:64}},'25':{start:{line:73,column:26},end:{line:89,column:5}},'26':{start:{line:74,column:22},end:{line:74,column:45}},'27':{start:{line:76,column:22},end:{line:76,column:24}},'28':{start:{line:77,column:8},end:{line:77,column:41}},'29':{start:{line:78,column:8},end:{line:78,column:45}},'30':{start:{line:80,column:8},end:{line:88,column:11}},'31':{start:{line:85,column:12},end:{line:85,column:50}},'32':{start:{line:87,column:12},end:{line:87,column:83}},'33':{start:{line:96,column:26},end:{line:102,column:5}},'34':{start:{line:97,column:22},end:{line:97,column:45}},'35':{start:{line:99,column:8},end:{line:101,column:11}},'36':{start:{line:100,column:12},end:{line:100,column:56}},'37':{start:{line:109,column:29},end:{line:121,column:5}},'38':{start:{line:110,column:22},end:{line:110,column:45}},'39':{start:{line:111,column:8},end:{line:120,column:15}},'40':{start:{line:116,column:12},end:{line:116,column:58}},'41':{start:{line:119,column:16},end:{line:119,column:58}},'42':{start:{line:128,column:29},end:{line:140,column:5}},'43':{start:{line:129,column:22},end:{line:129,column:45}},'44':{start:{line:130,column:8},end:{line:139,column:15}},'45':{start:{line:135,column:16},end:{line:135,column:74}},'46':{start:{line:138,column:16},end:{line:138,column:58}},'47':{start:{line:147,column:37},end:{line:165,column:5}},'48':{start:{line:148,column:22},end:{line:148,column:45}},'49':{start:{line:149,column:8},end:{line:164,column:15}},'50':{start:{line:153,column:26},end:{line:153,column:36}},'51':{start:{line:154,column:22},end:{line:154,column:32}},'52':{start:{line:156,column:29},end:{line:156,column:48}},'53':{start:{line:157,column:12},end:{line:160,column:14}},'54':{start:{line:163,column:16},end:{line:163,column:58}},'55':{start:{line:167,column:4},end:{line:176,column:5}},'56':{start:{line:180,column:0},end:{line:180,column:35}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:18,column:26},end:{line:18,column:27}},loc:{start:{line:18,column:57},end:{line:178,column:1}},line:18},'1':{name:'(anonymous_1)',decl:{start:{line:25,column:24},end:{line:25,column:25}},loc:{start:{line:25,column:47},end:{line:29,column:5}},line:25},'2':{name:'(anonymous_2)',decl:{start:{line:26,column:42},end:{line:26,column:43}},loc:{start:{line:26,column:52},end:{line:28,column:9}},line:26},'3':{name:'(anonymous_3)',decl:{start:{line:36,column:26},end:{line:36,column:27}},loc:{start:{line:36,column:49},end:{line:49,column:5}},line:36},'4':{name:'(anonymous_4)',decl:{start:{line:43,column:26},end:{line:43,column:27}},loc:{start:{line:43,column:46},end:{line:46,column:17}},line:43},'5':{name:'(anonymous_5)',decl:{start:{line:56,column:23},end:{line:56,column:24}},loc:{start:{line:56,column:46},end:{line:66,column:5}},line:56},'6':{name:'(anonymous_6)',decl:{start:{line:61,column:22},end:{line:61,column:23}},loc:{start:{line:61,column:42},end:{line:64,column:13}},line:61},'7':{name:'(anonymous_7)',decl:{start:{line:73,column:26},end:{line:73,column:27}},loc:{start:{line:73,column:49},end:{line:89,column:5}},line:73},'8':{name:'(anonymous_8)',decl:{start:{line:84,column:16},end:{line:84,column:17}},loc:{start:{line:84,column:36},end:{line:86,column:9}},line:84},'9':{name:'(anonymous_9)',decl:{start:{line:86,column:17},end:{line:86,column:18}},loc:{start:{line:86,column:23},end:{line:88,column:9}},line:86},'10':{name:'(anonymous_10)',decl:{start:{line:96,column:26},end:{line:96,column:27}},loc:{start:{line:96,column:49},end:{line:102,column:5}},line:96},'11':{name:'(anonymous_11)',decl:{start:{line:99,column:57},end:{line:99,column:58}},loc:{start:{line:99,column:63},end:{line:101,column:9}},line:99},'12':{name:'(anonymous_12)',decl:{start:{line:109,column:29},end:{line:109,column:30}},loc:{start:{line:109,column:52},end:{line:121,column:5}},line:109},'13':{name:'(anonymous_13)',decl:{start:{line:115,column:16},end:{line:115,column:17}},loc:{start:{line:115,column:22},end:{line:117,column:9}},line:115},'14':{name:'(anonymous_14)',decl:{start:{line:118,column:19},end:{line:118,column:20}},loc:{start:{line:118,column:30},end:{line:120,column:13}},line:118},'15':{name:'(anonymous_15)',decl:{start:{line:128,column:29},end:{line:128,column:30}},loc:{start:{line:128,column:52},end:{line:140,column:5}},line:128},'16':{name:'(anonymous_16)',decl:{start:{line:134,column:18},end:{line:134,column:19}},loc:{start:{line:134,column:27},end:{line:136,column:13}},line:134},'17':{name:'(anonymous_17)',decl:{start:{line:137,column:19},end:{line:137,column:20}},loc:{start:{line:137,column:30},end:{line:139,column:13}},line:137},'18':{name:'(anonymous_18)',decl:{start:{line:147,column:37},end:{line:147,column:38}},loc:{start:{line:147,column:60},end:{line:165,column:5}},line:147},'19':{name:'(anonymous_19)',decl:{start:{line:152,column:16},end:{line:152,column:17}},loc:{start:{line:152,column:29},end:{line:161,column:9}},line:152},'20':{name:'(anonymous_20)',decl:{start:{line:162,column:19},end:{line:162,column:20}},loc:{start:{line:162,column:30},end:{line:164,column:13}},line:162}},branchMap:{'0':{loc:{start:{line:44,column:20},end:{line:45,column:56}},type:'if',locations:[{start:{line:44,column:20},end:{line:45,column:56}},{start:{line:44,column:20},end:{line:45,column:56}}],line:44},'1':{loc:{start:{line:62,column:16},end:{line:63,column:64}},type:'if',locations:[{start:{line:62,column:16},end:{line:63,column:64}},{start:{line:62,column:16},end:{line:63,column:64}}],line:62}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0,'34':0,'35':0,'36':0,'37':0,'38':0,'39':0,'40':0,'41':0,'42':0,'43':0,'44':0,'45':0,'46':0,'47':0,'48':0,'49':0,'50':0,'51':0,'52':0,'53':0,'54':0,'55':0,'56':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0},b:{'0':[0,0],'1':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();/**
 * Created by dannyyassine on 2017-06-10.
 */const ProjectDataManager=(++cov_1j9x6uieyp.s[0],require('./../dataSource/ProjectDataManager'));const scriptManager=(++cov_1j9x6uieyp.s[1],require('../services/performScript'));const runShellScript=(++cov_1j9x6uieyp.s[2],require('./../useCases/RunShellScript'));const consoleLogger=(++cov_1j9x6uieyp.s[3],require('../services/consoleLogger'));const projectLog=(++cov_1j9x6uieyp.s[4],require('./../useCases/GetProjectLog'));const workspaceManager=(++cov_1j9x6uieyp.s[5],require('../services/workspace'));const Project=(++cov_1j9x6uieyp.s[6],require('./../../../core/models/project'));const addProjectInteractor=(++cov_1j9x6uieyp.s[7],require('./../useCases/AddNewProject'));const getProjectInteractor=(++cov_1j9x6uieyp.s[8],require('./../useCases/GetProject'));const updateProjectInteractor=(++cov_1j9x6uieyp.s[9],require('./../useCases/UpdateProject'));++cov_1j9x6uieyp.s[10];const projectController=function({projectDataSource}){++cov_1j9x6uieyp.f[0];++cov_1j9x6uieyp.s[11];/**
     * Response to - '/projects'
     * @param request
     * @param response
     */const allProjects=(request,response)=>{++cov_1j9x6uieyp.f[1];++cov_1j9x6uieyp.s[12];projectDataSource.loadAllProjects(data=>{++cov_1j9x6uieyp.f[2];++cov_1j9x6uieyp.s[13];response.status(200).json({data:data.projects});});};/**
     * Response to - '/projects/add'
     * @param request
     * @param response
     */++cov_1j9x6uieyp.s[14];const addNewProject=(request,response)=>{++cov_1j9x6uieyp.f[3];++cov_1j9x6uieyp.s[15];addProjectInteractor({request:{name:request.body.project_name},data:projectDataSource,response:{callback:(project,error)=>{++cov_1j9x6uieyp.f[4];++cov_1j9x6uieyp.s[16];if(error){++cov_1j9x6uieyp.b[0][0];++cov_1j9x6uieyp.s[17];response.status(400).json({error:error});}else{++cov_1j9x6uieyp.b[0][1];++cov_1j9x6uieyp.s[18];response.json({data:project});}}}});};/**
     * Response to - '/project/:project_id'
     * @param request
     * @param response
     */++cov_1j9x6uieyp.s[19];const getProject=(request,response)=>{++cov_1j9x6uieyp.f[5];let projectId=(++cov_1j9x6uieyp.s[20],request.params.project_id);++cov_1j9x6uieyp.s[21];getProjectInteractor({projectId:projectId,dataSource:projectDataSource,callback:(project,error)=>{++cov_1j9x6uieyp.f[6];++cov_1j9x6uieyp.s[22];if(error){++cov_1j9x6uieyp.b[1][0];++cov_1j9x6uieyp.s[23];response.status(400).json({error:error});}else{++cov_1j9x6uieyp.b[1][1];++cov_1j9x6uieyp.s[24];response.status(200).json({data:project});}}});};/**
     * Response to - '/project/:project_id/edit'
     * @param request
     * @param response
     */++cov_1j9x6uieyp.s[25];const updateProject=(request,response)=>{++cov_1j9x6uieyp.f[7];let project=(++cov_1j9x6uieyp.s[26],response.locals.project);let options=(++cov_1j9x6uieyp.s[27],{});++cov_1j9x6uieyp.s[28];options.name=request.body.name;++cov_1j9x6uieyp.s[29];options.script=request.body.script;++cov_1j9x6uieyp.s[30];updateProjectInteractor({project:project,options:options,dataSource:projectDataSource}).then(updatedProject=>{++cov_1j9x6uieyp.f[8];++cov_1j9x6uieyp.s[31];response.json({data:updatedProject});}).catch(()=>{++cov_1j9x6uieyp.f[9];++cov_1j9x6uieyp.s[32];response.status(400).json({'error':Error('could not update project')});});};/**
     * Responds to - '/project/:project_id'
     * @param request
     * @param response
     */++cov_1j9x6uieyp.s[33];const deleteProject=(request,response)=>{++cov_1j9x6uieyp.f[10];let project=(++cov_1j9x6uieyp.s[34],response.locals.project);++cov_1j9x6uieyp.s[35];projectDataSource.deleteProject(project.id).then(()=>{++cov_1j9x6uieyp.f[11];++cov_1j9x6uieyp.s[36];response.status(200).json({data:"delete"});});};/**
     * Responds to - '/project/:project_id/build'
     * @param request
     * @param response
     */++cov_1j9x6uieyp.s[37];const performShellTask=(request,response)=>{++cov_1j9x6uieyp.f[12];let project=(++cov_1j9x6uieyp.s[38],response.locals.project);++cov_1j9x6uieyp.s[39];runShellScript({project:project,dataSource:scriptManager,workspace:workspaceManager}).then(()=>{++cov_1j9x6uieyp.f[13];++cov_1j9x6uieyp.s[40];response.status(200).json({data:"building"});}).catch(error=>{++cov_1j9x6uieyp.f[14];++cov_1j9x6uieyp.s[41];response.status(400).json({error:error});});};/**
     * Responds to - '/project/:project_id/log'
     * @param request
     * @param response
     */++cov_1j9x6uieyp.s[42];const getAllConsoleLog=(request,response)=>{++cov_1j9x6uieyp.f[15];let project=(++cov_1j9x6uieyp.s[43],response.locals.project);++cov_1j9x6uieyp.s[44];projectLog.getLog({project:project,logger:consoleLogger}).then(log=>{++cov_1j9x6uieyp.f[16];++cov_1j9x6uieyp.s[45];response.send(log,{'Content-Type':'text/plain'},200);}).catch(error=>{++cov_1j9x6uieyp.f[17];++cov_1j9x6uieyp.s[46];response.status(400).json({error:error});});};/**
     * Responds to - '/project/:project_id/progressive-log'
     * @param request
     * @param response
     */++cov_1j9x6uieyp.s[47];const getProgressiveConsoleLog=(request,response)=>{++cov_1j9x6uieyp.f[18];let project=(++cov_1j9x6uieyp.s[48],response.locals.project);++cov_1j9x6uieyp.s[49];projectLog.getProgressiveLog({project:project,logger:consoleLogger}).then(results=>{++cov_1j9x6uieyp.f[19];let project=(++cov_1j9x6uieyp.s[50],results[0]);let log=(++cov_1j9x6uieyp.s[51],results[1]);let projectLog=(++cov_1j9x6uieyp.s[52],JSON.stringify(log));++cov_1j9x6uieyp.s[53];response.json({data:project,log:projectLog});}).catch(error=>{++cov_1j9x6uieyp.f[20];++cov_1j9x6uieyp.s[54];response.status(400).json({error:error});});};++cov_1j9x6uieyp.s[55];return{allProjects,getProject,addNewProject,updateProject,deleteProject,performShellTask,getAllConsoleLog,getProgressiveConsoleLog};};++cov_1j9x6uieyp.s[56];module.exports=projectController;