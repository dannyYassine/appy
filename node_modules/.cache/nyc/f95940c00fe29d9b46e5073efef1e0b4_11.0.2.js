var cov_4jzkj64fz=function(){var path='/Users/dannyyassine/Documents/dev/node_shell/src/api/v1/useCases/UpdateProject.js',hash='22d3b5b8124ec2be4f9b0c650aab90bfedf18356',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Users/dannyyassine/Documents/dev/node_shell/src/api/v1/useCases/UpdateProject.js',statementMap:{'0':{start:{line:5,column:43},end:{line:5,column:97}},'1':{start:{line:6,column:20},end:{line:6,column:67}},'2':{start:{line:15,column:22},end:{line:34,column:1}},'3':{start:{line:16,column:4},end:{line:33,column:7}},'4':{start:{line:18,column:21},end:{line:18,column:33}},'5':{start:{line:19,column:8},end:{line:19,column:28}},'6':{start:{line:20,column:8},end:{line:20,column:50}},'7':{start:{line:22,column:24},end:{line:22,column:82}},'8':{start:{line:24,column:8},end:{line:26,column:9}},'9':{start:{line:25,column:12},end:{line:25,column:60}},'10':{start:{line:28,column:8},end:{line:32,column:27}},'11':{start:{line:30,column:16},end:{line:30,column:40}},'12':{start:{line:36,column:0},end:{line:36,column:31}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:15,column:22},end:{line:15,column:23}},loc:{start:{line:15,column:64},end:{line:34,column:1}},line:15},'1':{name:'(anonymous_1)',decl:{start:{line:16,column:23},end:{line:16,column:24}},loc:{start:{line:16,column:44},end:{line:33,column:5}},line:16},'2':{name:'(anonymous_2)',decl:{start:{line:29,column:18},end:{line:29,column:19}},loc:{start:{line:29,column:38},end:{line:31,column:13}},line:29}},branchMap:{'0':{loc:{start:{line:24,column:8},end:{line:26,column:9}},type:'if',locations:[{start:{line:24,column:8},end:{line:26,column:9}},{start:{line:24,column:8},end:{line:26,column:9}}],line:24}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0},f:{'0':0,'1':0,'2':0},b:{'0':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();/**
 * Created by dannyyassine on 2017-06-12.
 */const{nameValidator,scriptValidator}=(++cov_4jzkj64fz.s[0],require('./../../../core/validators/projectValidator'));const validateAll=(++cov_4jzkj64fz.s[1],require('./../../../core/validators/validator'));/**
 * Business rules to validate if project can be updated
 * @param project
 * @param options
 * @param dataSource
 * @returns {Promise}
 */++cov_4jzkj64fz.s[2];const updateProject=function({project,options,dataSource}){++cov_4jzkj64fz.f[0];++cov_4jzkj64fz.s[3];return new Promise((resolve,reject)=>{++cov_4jzkj64fz.f[1];const name=(++cov_4jzkj64fz.s[4],options.name);++cov_4jzkj64fz.s[5];project.name=name;++cov_4jzkj64fz.s[6];project.shellTask.script=options.script;let validated=(++cov_4jzkj64fz.s[7],validateAll(project,[nameValidator(),scriptValidator()]));++cov_4jzkj64fz.s[8];if(validated===false){++cov_4jzkj64fz.b[0][0];++cov_4jzkj64fz.s[9];return reject(Error('wrong updated arguments'));}else{++cov_4jzkj64fz.b[0][1];}++cov_4jzkj64fz.s[10];dataSource.updateProject(project).then(updatedProject=>{++cov_4jzkj64fz.f[2];++cov_4jzkj64fz.s[11];resolve(updatedProject);}).catch(reject);});};++cov_4jzkj64fz.s[12];module.exports=updateProject;